<form theme="dark">
  <label>Jamf Overview</label>
  <search id="app_data">
    <query>index = jamf
sourcetype = jssUapiComputer:app
|eval event_time=strftime(_time,"%m-%d")
|dedup computer_meta.udid app.name

|fields - _raw punct source sourcetype splunk_server

| eval versionsplit = split(app.version, "."), Major = mvindex(versionsplit,0), Minor = mvindex(versionsplit,1), Build = mvindex(versionsplit,2), Revision = mvindex(versionsplit,3) 

|join type=left computer_meta.udid [|search index = jamf
sourcetype = jssUapiComputer:computerGeneral
|rex field=computerGeneral.lastContactTime "(?&lt;checkin_day&gt;\\d\\d\\d\\d-\\d\\d-\\d\\d)T(?&lt;checkin_hour&gt;\\d\\d:\\d\\d:\\d\\d)"
|eval checkin_time = checkin_day + " " + checkin_hour
|eval checkin_epoch = strptime('checkin_time', "%Y-%m-%d %H:%M:%S")
|fields computer_meta.udid checkin_time checkin_epoch checkin_day checkin_hour]

|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True</query>
    <earliest>$tok_time.earliest$</earliest>
    <latest>$tok_time.latest$</latest>
  </search>
  <search id="general_data">
    <query>index = jamf
sourcetype = jssUapiComputer:computerGeneral OR sourcetype = jssUapiComputer:computerHardware OR sourcetype = jssUapiComputer:diskEncryption OR sourcetype = jssUapiComputer:operatingSystem OR sourcetype = jssUapiComputer:userAndLocation

``` remove all duplicate entries for the event days this way we get the latest if a device ingested multiple times per source type```
|dedup computer_meta.udid sourcetype

``` combine sourcetypes together ```
| stats values(*) as * by computer_meta.udid

``` Convert Operating systems to major version```
|eval OS = case('computerOS.version' LIKE "10.9%", "10.9", 
'computerOS.version' LIKE "10.10%", "10.10",
'computerOS.version' LIKE "10.11%", "10.11",
'computerOS.version' LIKE "10.12%", "10.12",
'computerOS.version' LIKE "10.13%", "10.13",
'computerOS.version' LIKE "10.14%", "10.14",
'computerOS.version' LIKE "10.15%", "10.15",
'computerOS.version' LIKE "10.16%", "11", 
'computerOS.version' LIKE "11.%", "11",
'computerOS.version' LIKE "12.%", "12",
'computerOS.version' LIKE "13.%", "13", 
'computerOS.version' LIKE "14.%", "14", 
'computerOS.version' LIKE "15.%", "15",
'computerOS.version' LIKE "16.%", "16",
'computerOS.version' LIKE "17.%", "17")

|eval main_model = case('computerHardware.model' LIKE "%MacBook Pro%", "MacBook Pro", 
'computerHardware.model' LIKE "%MacBook Air%", "MacBook Air", 
'computerHardware.model' LIKE "%Mac Studio%", "Mac Studio", 
'computerHardware.model' LIKE "%Mac Mini%", "Mac Mini", 
'computerHardware.model' LIKE "%Mac Pro%", "Mac Pro", 
'computerHardware.model' LIKE "%iMac%", "iMac", 
1=1, computerHardware.model)

``` add IP data although it might not be neccesary ```
| iplocation allfields=true computerGeneral.lastIpAddress
``` convert last contact time to day and hours sorry this is bad code but i wrote this peice on a plane with no wifi```
|rex field=computerGeneral.lastContactTime "(?&lt;checkin_day&gt;\\d\\d\\d\\d-\\d\\d-\\d\\d)T(?&lt;checkin_hour&gt;\\d\\d:\\d\\d:\\d\\d)"
|eval checkin_time = checkin_day + " " + checkin_hour
|eval checkin_epoch = strptime('checkin_time', "%Y-%m-%d %H:%M:%S")

|join type=left computer_meta.udid [|search index = jamf 
sourcetype = jssUapiComputer:diskPart
diskPartition.partitionType = BOOT] 

</query>
    <earliest>$tok_time.earliest$</earliest>
    <latest>$tok_time.latest$</latest>
  </search>
  <search id="extension_attributes">
    <query>index = jamf
sourcetype = jssUapiComputer:extensionAttribute
|table *


|dedup computer_meta.udid extensionAttribute.name


|join type=left computer_meta.udid [|search index = jamf
sourcetype = jssUapiComputer:computerGeneral OR 
sourcetype = jssUapiComputer:computerHardware OR 
sourcetype = jssUapiComputer:diskEncryption OR 
sourcetype = jssUapiComputer:userAndLocation
earliest=-24h

|dedup computer_meta.udid sourcetype
``` remove all duplicate entries based on sourcetype, we only want the latest devices```
``` combine the values ```
|stats values(*) as * by computer_meta.udid
``` add IP data although it might not be neccesary ```
| iplocation allfields=true computerGeneral.lastIpAddress
``` convert last contact time to day and hours sorry this is bad code but i wrote this peice on a plane with no wifi```
|rex field=computerGeneral.lastContactTime "(?&lt;checkin_day&gt;\\d\\d\\d\\d-\\d\\d-\\d\\d)T(?&lt;checkin_hour&gt;\\d\\d:\\d\\d:\\d\\d)"
|eval checkin_time = checkin_day + " " + checkin_hour
|eval checkin_epoch = strptime('checkin_time', "%Y-%m-%d %H:%M:%S")
]
</query>
    <earliest>$tok_time.earliest$</earliest>
    <latest>$tok_time.latest$</latest>
  </search>
  <fieldset submitButton="false" autoRun="false">
    <input type="time" token="tok_time" searchWhenChanged="true">
      <label>ingest time frame   _______  (how often splunk talks to jamf)</label>
      <default>
        <earliest>-24h@h</earliest>
        <latest>now</latest>
      </default>
    </input>
    <input type="text" token="tok_time" searchWhenChanged="true">
      <label>Checkin Time</label>
      <default>30</default>
    </input>
    <input type="radio" token="tok_time_multiplier" searchWhenChanged="true">
      <label>Time Multiplier</label>
      <choice value="9999999999">All</choice>
      <choice value="2629743">Months</choice>
      <choice value="86400">Days</choice>
      <choice value="3600">Hours</choice>
      <default>86400</default>
    </input>
  </fieldset>
  <row>
    <panel>
      <single>
        <title>Total devices with filters</title>
        <search base="general_data">
          <query>|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True
|stats count as Total</query>
        </search>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title>Hardware Models</title>
      <input type="multiselect" token="tok_main_model" searchWhenChanged="true">
        <label>Main Model</label>
        <search base="general_data">
          <query>|stats count by main_model</query>
        </search>
        <choice value="*">All</choice>
        <default>*</default>
        <fieldForLabel>main_model</fieldForLabel>
        <fieldForValue>main_model</fieldForValue>
        <valuePrefix>main_model = "</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> OR </delimiter>
      </input>
      <input type="multiselect" token="tok_hardware_options" searchWhenChanged="true">
        <label>Hardware Options</label>
        <choice value="*">All</choice>
        <default>*</default>
        <initialValue>*</initialValue>
        <fieldForLabel>computerHardware.model</fieldForLabel>
        <fieldForValue>computerHardware.model</fieldForValue>
        <search base="general_data">
          <query>|stats count by computerHardware.model</query>
        </search>
        <valuePrefix>computerHardware.model = "</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> OR </delimiter>
      </input>
      <table>
        <title>Hardware chart</title>
        <search base="general_data">
          <query>|search 
$tok_hardware_options$
$tok_main_model$
|table computer_meta.udid checkin_day computerHardware.model computerGeneral.name userAndLocation.username *</query>
        </search>
        <option name="count">5</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="wrap">false</option>
      </table>
    </panel>
  </row>
  <row>
    <panel>
      <title>Operating Systems</title>
      <input type="time" token="tok_os_search_time" searchWhenChanged="true">
        <label>Search time</label>
        <default>
          <earliest>-30d@d</earliest>
          <latest>now</latest>
        </default>
      </input>
      <input type="dropdown" token="tok_span" searchWhenChanged="true">
        <label>Span by Days</label>
        <choice value="|stats count by OS event_time |chart values(count) as count by event_time OS">1 Day Span</choice>
        <choice value="match_long_day_name = True |stats count by OS event_time |chart values(count) as count by event_time OS">7 Day Span</choice>
        <choice value="|dedup computer_meta.udid event_time_month |stats count by OS event_time_month |chart values(count) as count by event_time_month OS">30 Day Span</choice>
        <default>match_long_day_name = True |stats count by OS event_time |chart values(count) as count by event_time OS</default>
      </input>
      <chart>
        <title>Set check in to the legth of the search time for more accurate results</title>
        <search id="os_specific">
          <query>index = jamf
sourcetype = jssUapiComputer:operatingSystem

``` remove all duplicate entries for the event days this way we get the latest if a device ingested multiple times per source type```
|eval event_time=strftime(_time,"%m-%d")
|dedup computer_meta.udid event_time sourcetype

``` Convert Operating systems to major version```
|eval OS = case('computerOS.version' LIKE "10.9%", "10.9", 
'computerOS.version' LIKE "10.10%", "10.10",
'computerOS.version' LIKE "10.11%", "10.11",
'computerOS.version' LIKE "10.12%", "10.12",
'computerOS.version' LIKE "10.13%", "10.13",
'computerOS.version' LIKE "10.14%", "10.14",
'computerOS.version' LIKE "10.15%", "10.15",
'computerOS.version' LIKE "10.16%", "11", 
'computerOS.version' LIKE "11.%", "11",
'computerOS.version' LIKE "12.%", "12",
'computerOS.version' LIKE "13.%", "13", 
'computerOS.version' LIKE "14.%", "14", 
'computerOS.version' LIKE "15.%", "15",
'computerOS.version' LIKE "16.%", "16",
'computerOS.version' LIKE "17.%", "17")

``` event_time_month is used when searching on a 90 day period.and getting a month over month latest calculation```
|eval event_time_month = strftime(_time,"%y-%m %b")

``` search_todays_day is used when searching for 30 day period getting the current day week over week.```
|eval search_todays_day = strftime(now(),"%A")

``` event_time_divide is used when using search_todays_day to find todays date to qualify the event.```
|eval event_time_day = strftime(_time,"%A")

``` match_long_day_name is used when using search_todays_day to tag the event as an acceptable day were looking for.```
|eval match_long_day_name = case(event_time_day = search_todays_day, "True", 1=1,"False")


``` Join the basic computer data over for the checkin times to also see if its an acceptable event```
|join type=left computer_meta.udid [|search index = jamf
sourcetype = jssUapiComputer:computerGeneral OR 
sourcetype = jssUapiComputer:computerHardware OR 
sourcetype = jssUapiComputer:diskEncryption OR 
sourcetype = jssUapiComputer:userAndLocation
earliest=-24h
|dedup computer_meta.udid sourcetype
``` remove all duplicate entries based on sourcetype, we only want 1 device per 24 hours```
``` combine the values ```
|stats values(*) as * by computer_meta.udid
``` add IP data although it might not be neccesary ```
| iplocation allfields=true computerGeneral.lastIpAddress
``` convert last contact time to day and hours sorry this is bad code but i wrote this peice on a plane with no wifi```
|rex field=computerGeneral.lastContactTime "(?&lt;checkin_day&gt;\\d\\d\\d\\d-\\d\\d-\\d\\d)T(?&lt;checkin_hour&gt;\\d\\d:\\d\\d:\\d\\d)"
|eval checkin_time = checkin_day + " " + checkin_hour
|eval checkin_epoch = strptime('checkin_time', "%Y-%m-%d %H:%M:%S")]


``` *** BELOW SHOULD BE DATA IN DASHBOARD SEARCH TIED TO INITIAL SEARCH *** ```

``` This time eval comes from input information from dashboard. input X hour/day/month```
| eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)

``` time_eval meaning the time of NOW minus a couple days to stamp where we want to create a checkpoint. Now any device with a epoch checkin time thats greater then that is an acceptable event```
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True

``` now lets search the acceptable events based on inputs of how to chart the data. Keep in mind we dont use timecharts because in my expereince it doesnt care about checkin time search evaluations ```
$tok_span$</query>
          <earliest>$tok_os_search_time.earliest$</earliest>
          <latest>$tok_os_search_time.latest$</latest>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.chart.stackMode">default</option>
        <option name="charting.drilldown">none</option>
        <option name="charting.layout.splitSeries">0</option>
        <option name="height">544</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
    <panel>
      <title>Todays Sub OS Statistics</title>
      <chart>
        <search base="general_data">
          <query>|stats count by OS computerOS.version</query>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">collapsed</option>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.legend.placement">none</option>
        <option name="height">599</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <option name="trellis.size">medium</option>
        <drilldown>
          <set token="sub_os_value">$trellis.value$</set>
        </drilldown>
      </chart>
    </panel>
    <panel depends="$sub_os_value$">
      <title>$sub_os_value$</title>
      <table>
        <search base="general_data">
          <query>|eval OS = case('computerOS.version' LIKE "10.9%", "10.9", 'computerOS.version' LIKE "10.10%", "10.10",'computerOS.version' LIKE "10.11%", "10.11",'computerOS.version' LIKE "10.12%", "10.12",'computerOS.version' LIKE "10.13%", "10.13",'computerOS.version' LIKE "10.14%", "10.14",'computerOS.version' LIKE "10.15%", "10.15",'computerOS.version' LIKE "10.16%", "11", 'computerOS.version' LIKE "11.%", "11",'computerOS.version' LIKE "12.%", "12",'computerOS.version' LIKE "13.%", "13", 'computerOS.version' LIKE "14.%", "14", 'computerOS.version' LIKE "15.%", "15",'computerOS.version' LIKE "16.%", "16")

            |search OS = $sub_os_value$
            |stats values(*) as * by computer_meta.udid
</query>
        </search>
        <option name="count">5</option>
        <option name="drilldown">none</option>
        <option name="wrap">false</option>
      </table>
    </panel>
  </row>
  <row>
    <panel depends="$tok_country_choice$">
      <title>$tok_country_choice$ Country list of users</title>
      <input type="multiselect" token="tok_map_fields" searchWhenChanged="true">
        <label>Map Fields</label>
        <choice value="*">All</choice>
        <default>*</default>
        <prefix>| fields </prefix>
        <delimiter> </delimiter>
        <fieldForLabel>column</fieldForLabel>
        <fieldForValue>column</fieldForValue>
        <search base="general_data">
          <query>| transpose
|table column</query>
        </search>
      </input>
      <table>
        <search base="general_data">
          <query>|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True

Country = "$tok_country_choice$"
$tok_map_fields$</query>
        </search>
        <option name="count">6</option>
        <option name="drilldown">cell</option>
        <drilldown>
          <unset token="tok_country_choice"></unset>
        </drilldown>
      </table>
    </panel>
    <panel>
      <title>Country Map</title>
      <map>
        <search base="general_data">
          <query>|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True

|stats count by Country
| geom geo_countries featureIdField="Country"</query>
        </search>
        <option name="drilldown">all</option>
        <option name="height">549</option>
        <option name="mapping.choroplethLayer.colorMode">categorical</option>
        <option name="mapping.legend.placement">bottomright</option>
        <option name="mapping.map.center">(36.39,-50.45)</option>
        <option name="mapping.map.zoom">3</option>
        <option name="mapping.type">choropleth</option>
        <drilldown>
          <set token="tok_country_choice">$click.value$</set>
        </drilldown>
      </map>
    </panel>
    <panel>
      <title>City Map</title>
      <map>
        <search base="general_data">
          <query>|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True

| geostats globallimit=5000 count by City</query>
        </search>
        <option name="drilldown">none</option>
        <option name="height">549</option>
        <option name="mapping.legend.placement">bottomright</option>
        <option name="mapping.map.center">(36.39,-10.9)</option>
        <option name="mapping.map.zoom">3</option>
        <option name="mapping.type">marker</option>
      </map>
    </panel>
  </row>
  <row>
    <panel>
      <input type="dropdown" token="tok_percentage_full_search" searchWhenChanged="true">
        <label>Less | More</label>
        <choice value="&lt;=">Less Than</choice>
        <choice value="&gt;=">More Than</choice>
        <default>&gt;=</default>
      </input>
      <input type="text" token="tok_percentage_full" searchWhenChanged="true">
        <label>HDD Percentage Full</label>
        <default>0</default>
      </input>
      <input type="multiselect" token="tok_encrypted" searchWhenChanged="true">
        <label>Encrypted</label>
        <choice value="*">All</choice>
        <initialValue>*</initialValue>
        <fieldForLabel>computerOS.fileVault2Status</fieldForLabel>
        <fieldForValue>computerOS.fileVault2Status</fieldForValue>
        <search base="general_data">
          <query>|stats count by computerOS.fileVault2Status</query>
        </search>
        <valuePrefix>computerOS.fileVault2Status = "</valuePrefix>
        <valueSuffix>"</valueSuffix>
        <delimiter> OR </delimiter>
      </input>
      <input type="multiselect" token="tok_HDD_fields" searchWhenChanged="true">
        <label>Additional Fields</label>
        <choice value="*">All</choice>
        <default>*</default>
        <delimiter> </delimiter>
        <fieldForLabel>column</fieldForLabel>
        <fieldForValue>column</fieldForValue>
        <search base="general_data">
          <query>| transpose
|table column</query>
        </search>
      </input>
      <table>
        <title>HD Info</title>
        <search base="general_data">
          <query>|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True
$tok_encrypted$
diskPartition.percentUsed $tok_percentage_full_search$ $tok_percentage_full$


|fields checkin_time computerGeneral.name userAndLocation.username computerDiskEncryption.fileVault2EnabledUserNames{} computerHardware.serialNumber diskPartition.name  diskPartition.sizeMegabytes diskPartition.percentUsed diskPartition.availableMegabytes diskPartition.fileVault2State diskPartition.fileVault2ProgressPercent computerOS.fileVault2Status  $tok_HDD_fields$</query>
        </search>
        <option name="count">5</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="wrap">false</option>
      </table>
    </panel>
    <panel>
      <title>HDD Boot type status</title>
      <chart>
        <search base="general_data">
          <query>|eval time_eval = now() - ($tok_time$ * $tok_time_multiplier$)
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True
$tok_encrypted$
diskPartition.percentUsed $tok_percentage_full_search$ $tok_percentage_full$


|stats count by computerOS.fileVault2Status</query>
        </search>
        <option name="charting.chart">column</option>
        <option name="charting.chart.showDataLabels">all</option>
        <option name="charting.drilldown">none</option>
        <option name="height">402</option>
        <option name="refresh.display">progressbar</option>
      </chart>
    </panel>
  </row>
  <row>
    <panel>
      <title>Application Search</title>
      <input type="text" token="tok_app_name" searchWhenChanged="true">
        <label>Application Name</label>
        <default>Slack</default>
      </input>
      <input type="dropdown" token="tok_app_name_search_type" searchWhenChanged="true">
        <label>Search Type</label>
        <choice value=".app">Explicit</choice>
        <choice value="*">Contains</choice>
        <default>*</default>
        <initialValue>*</initialValue>
      </input>
      <chart>
        <search base="app_data">
          <query>|search app.name = "$tok_app_name$$tok_app_name_search_type$"

|stats count by app.name app.version</query>
        </search>
        <option name="charting.axisTitleX.visibility">collapsed</option>
        <option name="charting.axisTitleY.visibility">collapsed</option>
        <option name="charting.axisTitleY2.visibility">collapsed</option>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">all</option>
        <option name="charting.legend.placement">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="trellis.enabled">1</option>
        <drilldown>
          <set token="app_click_value">$click.value$</set>
          <set token="app_trellis_value">$trellis.value$</set>
        </drilldown>
      </chart>
    </panel>
    <panel depends="$app_click_value$">
      <title>$app_trellis_value$ : $app_click_value$</title>
      <input type="radio" token="tok_app_search" searchWhenChanged="true">
        <label></label>
        <choice value="app.version =">IS version</choice>
        <choice value="app.version !=">is NOT version</choice>
        <choice value="app.version = * OR app.version =">All</choice>
        <default>app.version =</default>
      </input>
      <table>
        <search base="app_data">
          <query>|search app.name = "$app_trellis_value$"
$tok_app_search$ $app_click_value$
</query>
        </search>
        <option name="count">3</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
        <option name="wrap">false</option>
      </table>
    </panel>
    <panel>
      <title>App Total count</title>
      <single>
        <search base="app_data">
          <query>|search app.name = "$tok_app_name$$tok_app_name_search_type$"

|stats count as Total</query>
        </search>
        <option name="drilldown">none</option>
        <option name="height">489</option>
        <option name="refresh.display">progressbar</option>
      </single>
    </panel>
  </row>
  <row>
    <panel>
      <title>Extension Attributes</title>
      <input type="dropdown" token="tok_extension_attributes" searchWhenChanged="true">
        <label>Extension Attributes</label>
        <choice value="*">All</choice>
        <initialValue>*</initialValue>
        <fieldForLabel>extensionAttribute.name</fieldForLabel>
        <fieldForValue>extensionAttribute.name</fieldForValue>
        <search base="extension_attributes">
          <query>|stats count by extensionAttribute.name</query>
        </search>
        <default>*</default>
      </input>
      <input type="text" token="tok_extension_value" searchWhenChanged="true">
        <label>Extension Value</label>
        <default>*</default>
      </input>
      <table>
        <title>Extensions Attributes</title>
        <search base="extension_attributes">
          <query>``` This time eval comes from input information from dashboard. input X hour/day/month```
| eval time_eval = now() - (30 * 86400)

``` time_eval meaning the time of NOW minus a couple days to stamp where we want to create a checkpoint. Now any device with a epoch checkin time thats greater then that is an acceptable event```
|eval checkin_search = case(time_eval &lt;= checkin_epoch, "True", 1=1, "False")
|search checkin_search = True

extensionAttribute.name = "$tok_extension_attributes$"
extensionAttribute.value = "$tok_extension_value$"
|fields - _raw
|table extension* *</query>
        </search>
        <option name="count">5</option>
        <option name="drilldown">none</option>
        <option name="refresh.display">progressbar</option>
      </table>
    </panel>
    <panel>
      <chart>
        <title>Extensions Attributes values</title>
        <search base="extension_attributes">
          <query>|search extensionAttribute.name = "$tok_extension_attributes$"
extensionAttribute.value = "$tok_extension_value$"
|fields - _raw
|stats count by extensionAttribute.value</query>
        </search>
        <option name="charting.chart">pie</option>
        <option name="charting.drilldown">none</option>
        <option name="height">811</option>
      </chart>
    </panel>
  </row>
</form>
